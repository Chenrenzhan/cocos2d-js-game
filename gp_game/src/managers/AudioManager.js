// Generated by CoffeeScript 1.10.0

/*
  音频管理类
 */

(function() {
  this.AudioManager = {
    mBgMusic: resAudio.bg_music,
    mSuccessAudio: resAudio.success,
    mFailsAudio: resAudio.fails,
    mTurnAudio: resAudio.overturn,
    mClickAudio: resAudio.click,
    mTranspAudio: resAudio.transp,
    mLoadingFinish: resAudio.loading_finish,
    mStartGameAudio: resAudio.start_game,
    mIsBgOlaying: false,
    isBgmPlaying: function() {
      return cc.audioEngine.isMusicPlaying();
    },
    initBgm: function() {
      if (Configs.mIsBgmPlay) {
        return this.playBgm();
      } else {
        return this.stopBgm();
      }
    },
    playBgm: function() {
      if (!this.mIsBgOlaying) {
        cc.audioEngine.playMusic(this.mBgMusic, true);
        return this.mIsBgOlaying = true;
      }
    },
    pauseBgm: function() {
      if (this.mIsBgOlaying) {
        cc.audioEngine.pauseMusic();
        return this.mIsBgOlaying = false;
      }
    },
    resumeBgm: function() {
      if (!this.mIsBgOlaying) {
        cc.audioEngine.resumeMusic();
        return this.mIsBgOlaying = true;
      }
    },
    stopBgm: function() {
      if (Configs.mIsBgmPlay) {
        cc.audioEngine.stopMusic();
        return this.mIsBgOlaying = false;
      }
    },
    saveIsBgmPlay: function(isBgmPlay) {
      Configs.mIsBgmPlay = isBgmPlay;
      return DataUtil.saveMusicSettings(isBgmPlay);
    },
    saveIsSound: function(isOpen) {
      return DataUtil.saveSoundSettings(isOpen);
    },
    playWinAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mSuccessAudio, false);
      }
    },
    playFailsAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mFailsAudio, false);
      }
    },
    playTurnAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mTurnAudio, false);
      }
    },
    playClickAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mClickAudio, false);
      }
    },
    playTranspkAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mTranspAudio, false);
      }
    },
    playLoadingFinish: function() {
      if (Configs.mData[Keys.SOUND]) {
        return this.finishAudioId = cc.audioEngine.playEffect(this.mLoadingFinish, false);
      }
    },
    stopLoadingFinish: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.stopEffect(this.finishAudioId);
      }
    },
    playStartGameAudio: function() {
      if (Configs.mData[Keys.SOUND]) {
        return cc.audioEngine.playEffect(this.mStartGameAudio, false);
      }
    }
  };

}).call(this);

//# sourceMappingURL=AudioManager.js.map
